{"name":"Navi","tagline":"A simple client-side routing library.","body":"# Navi\r\n\r\nNavi is a simple client-side routing library.\r\n\r\n## Examples\r\n\r\n``` js\r\nnavi.route('/posts/:id').enter(function(params, next){\r\n\tconsole.log('enter: ' + params[0]);\r\n\tnext();\r\n)).exit(function(params, next){\r\n\tconsole.log('exit: ' + params[0]);\r\n\tnext();\r\n});\r\n```\r\n\r\n## Download\r\n\r\n- **Development:** [navi.js](https://github.com/tommy351/navi/raw/master/lib/navi.js) - 5.2KB uncompressed\r\n- **Production:** [navi.min.js](https://github.com/tommy351/navi/raw/master/lib/navi.min.js) - 1.05KB minified and gzipped\r\n\r\n## Documentation\r\n\r\n### Options\r\n\r\n**Default options:**\r\n\r\n``` js\r\nnavi.options = {\r\n\thtml5: true\r\n}\r\n```\r\n\r\n- `html5`: Uses HTML5 PushState.\r\n\r\n### route(path, [fn])\r\n\r\nCreates a route. The `path` argument can be a routing string or regular expression. If the `fn` argument is provided, it'll be the first enter function.\r\n\r\n``` js\r\n// Matches /posts/25\r\nnavi.route('/posts/:id/');\r\n\r\n// Matches /assets/img/cat.jpg\r\nnavi.route('/assets/*path');\r\n\r\n// Matches /zh-tw/landing\r\nnavi.route(/^\\/(.*?)\\/landing$/);\r\n```\r\n\r\n### navigate(path, [options])\r\n\r\nRedirects to the given `path`.\r\n\r\n**Options:**\r\n\r\n- `replace` - Replaces the current state.\r\n\r\n### forward([num])\r\n\r\nGoes to the next page.\r\n\r\n**Alias**: *go*\r\n\r\n### back([num])\r\n\r\nGoes to the previous page.\r\n\r\n### match(url)\r\n\r\nChecks whether the `url` is matched with the registered routes.\r\n\r\n### Class: Route\r\n\r\nWhen users entering an URL, Navi'll trigger the matching route's enter stacks and so as exiting.\r\n\r\nEach function in the stack is invoked with 2 parameters: `(params, next)`. The `params` includes properties mapped to the route.\r\n\r\n``` js\r\n// Enters /posts/25\r\nnavi.route('/posts/:id', function(params, next){\r\n\tconsole.log(params.id);\r\n\t// => \"25\"\r\n});\r\n```\r\n\r\nThe functions in the stack are executed in series. The next function won't be executed unless the previous function called `next()`.\r\n\r\n``` js\r\nnavi.route('/posts/:id', function(params, next){\r\n\tnext();\r\n}).enter(function(params, next){\r\n\t// This function will be executed\r\n}).enter(function(params, next){\r\n\t// This function won't be executed\r\n});\r\n```\r\n\r\n#### route.enter(fn)\r\n\r\nAdds the `fn` to the enter stack.\r\n\r\n#### route.exit(fn)\r\n\r\nAdds the `fn` to the exit stack.\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2013 Tommy Chen\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"UA-4910098-7","note":"Don't delete this file! It's used internally to help with page regeneration."}